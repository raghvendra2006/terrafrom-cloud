locals {
  # Corrected CIDR blocks for each description type
  cidr_blocks_test1 = ["10.0.0.0/24", "10.10.0.0/24", "11.12.0.0/24"]

  # Define port ranges and protocols for each description
  rules = flatten([
    for rule in [
      { ports = [23], protocols = ["tcp"], cidr_blocks = local.cidr_blocks_test1 },
      { ports = [60, 68], protocols = ["tcp", "udp"], cidr_blocks = local.cidr_blocks_test1 }
    ] : [
      for protocol in rule.protocols : [
        for port in rule.ports : {
          from_port   = port
          to_port     = port
          protocol    = protocol
          cidr_blocks = rule.cidr_blocks
        }
      ]
    ]
  ])

  # Create a map with a unique key for each rule
  rules_map = { for idx, rule in local.rules : "${rule.from_port}-${rule.to_port}-${rule.protocol}-${idx}" => rule }
}

resource "aws_security_group_rule" "ingress1" {
  for_each = local.rules_map

  type             = "ingress"
  from_port        = each.value.from_port
  to_port          = each.value.to_port
  protocol         = each.value.protocol
  cidr_blocks      = each.value.cidr_blocks
  security_group_id = aws_security_group.example.id
}
