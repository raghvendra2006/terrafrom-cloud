locals {
  # Corrected CIDR blocks for each description type
  cidr_blocks_test3 = ["1.2.3.0/24", "5.6.7.0/24"]
  cidr_blocks_new_rule = ["1.2.3.0/24", "2.3.4.0/24"]

  # Define port ranges and protocols for each description
  rules = flatten([
    for rule in [
      { from_port = 0, to_port = 0, protocols = ["-1"], cidr_blocks = local.cidr_blocks_test3 },
      { from_port = 41000, to_port = 43000, protocols = ["tcp"], cidr_blocks = local.cidr_blocks_new_rule },
      { from_port = 41000, to_port = 43000, protocols = ["udp"], cidr_blocks = local.cidr_blocks_new_rule }
    ] : [
      for protocol in rule.protocols : {
        from_port   = rule.from_port
        to_port     = rule.to_port
        protocol    = protocol
        cidr_blocks = rule.cidr_blocks
      }
    ]
  ])
}

resource "aws_security_group_rule" "ingress" {
  for_each = { for idx, rule in local.rules : "${rule.from_port}-${rule.to_port}-${rule.protocol}" => rule }

  type             = "ingress"
  from_port        = each.value.from_port
  to_port          = each.value.to_port
  protocol         = each.value.protocol
  cidr_blocks      = each.value.cidr_blocks
  security_group_id = aws_security_group.example.id
}
